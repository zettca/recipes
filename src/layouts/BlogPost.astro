---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Link from "../components/Link.astro";
import { toISODate } from "../utils";

type ExtraProps = {
  lastModified?: Date;
};

type Props = CollectionEntry<"recipes"> & ExtraProps;

const { id, data, lastModified } = Astro.props;
const { title, description, pubDate, heroImage } = data;

const editUrl = `https://github.com/zettca/recipes/edit/master/src/content/recipes/${id}.md`;

const isSameDate = (d1: Date, d2: Date) => toISODate(d1) === toISODate(d2);
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body>
    <main class="w-full m-0">
      <article class="prose m-auto text-lg text-pretty">
        <div class="flex flex-wrap flex-col sm:flex-row items-baseline mb-4">
          <div class="flex items-center flex-1 gap-2 text-4xl">
            <Link class="i-tabler-arrow-left" href="/" />
            <h1 class="text-size-inherit">{title}</h1>
          </div>
          <div class="grid self-end text-end leading-none color-gray">
            <FormattedDate date={pubDate} />
            {
              lastModified && !isSameDate(pubDate, lastModified) && (
                <span class="italic text-sm">
                  (updated <FormattedDate date={lastModified} />)
                </span>
              )
            }
            <a href={editUrl}>Edit</a>
          </div>
        </div>
        {
          heroImage && (
            <img
              class="mx-auto rounded w-full aspect-square md:aspect-video object-cover"
              height={300}
              src={heroImage}
              alt=""
            />
          )
        }
        <div>
          <slot />
        </div>
      </article>
    </main>
  </body>
</html>
