---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Link from "../components/Link.astro";
import FormattedDate from "../components/FormattedDate.astro";

type ExtraProps = {
  lastModified?: Date;
};

type Props = CollectionEntry<"recipes"> & ExtraProps;

const { id, data, lastModified } = Astro.props;
const { title, description, pubDate, heroImage } = data;

const editUrl = `https://github.com/zettca/recipes/edit/master/src/content/recipes/${id}`;

const sameDate = (d1: Date, d2: Date) => {
  return d1.toISOString().slice(0, 10) === d2.toISOString().slice(0, 10);
};
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body>
    <main class="w-full m-0">
      <article class="prose m-auto">
        <div class="flex items-baseline gap-2 mb-4 text-center leading-none">
          <Link class="text-3xl i-tabler-arrow-left" href="/" />
          <h1>{title}</h1>
          <a href={editUrl}>Edit</a>
          <div class="flex-1"></div>
          <div class="flex flex-col items-end color-gray">
            <FormattedDate date={pubDate} />
            {
              lastModified && !sameDate(pubDate, lastModified) && (
                <span class="italic">
                  edited <FormattedDate date={lastModified} />
                </span>
              )
            }
          </div>
        </div>
        <div class="w-full">
          {
            heroImage && (
              <img
                class="mx-auto rounded"
                width={1020}
                height={510}
                src={heroImage}
                alt=""
              />
            )
          }
        </div>
        <div>
          <slot />
        </div>
      </article>
    </main>
  </body>
</html>
